const defaultTableMergeOptions={mergeColumns:[],mergeColumnsRelations:{},horizontalColumns:[],disabled:!1,splitter:"$$",mergeEmpty:!1,getRowKey:e=>e.id,judgeValueEquals(e,t,o,l){const s=e.val,r=t.val,{mergeEmpty:n}=o.options;return(n||""!==s&&""!==r&&void 0!==s&&void 0!==r)&&s===r}};export class TableCellMerger{setOptions(e){return this._options=Object.assign({},this.defaultTableMergeOptions,e),this}mergeCell(e){if(this._disabled())return;const t={};return this._mergeByVertical(e,t),this._mergeByHorizontal(e,t),Object.keys(t).forEach((e=>{const o=t[e];o&&(delete o._pre_h,delete o._pre_v)})),this.cellMap=t,this}_mergeByVertical(e,t){for(let o=0;o<e.length;o++){const l=e[o],s=e[o+1],r=this.mergeColumns,n=this._getRowKey(l);r.forEach((e=>{var o;const r=l[e],a=null==s?void 0:s[e],i=this._getCellKey(n,e);let p=t[i];if(p||(p=t[i]={colspan:1,rowspan:1}),s&&this._judgeValueEquals({rowData:l,prop:e,val:r},{rowData:s,prop:e,val:a},!0)){let r=this.mergeColumnsRelations[e];for(;r;){const e=l[r],t=null==s?void 0:s[r];if(!this._judgeValueEquals({rowData:l,prop:r,val:e},{rowData:s,prop:r,val:t},!0))return;r=this.mergeColumnsRelations[r]}const n=this._getCellKey(s,e),a=null!==(o=p._pre_v)&&void 0!==o?o:p;t[n]={colspan:0,rowspan:0,_pre_v:a},a.rowspan++}}))}}_mergeByHorizontal(e,t){const o=this._getHorizontalColumns();if(o.length)for(let l=0;l<e.length;l++){const s=e[l],r=this._getRowKey(s);o.forEach((e=>{e.length&&e.reduce(((e,o)=>{if(e){const l=this._getCellKey(r,o),n=this._getCellKey(r,e),a=s[o],i=s[e];let p=t[l];if(p||(p=t[l]={colspan:1,rowspan:1}),this._judgeValueEquals({rowData:s,prop:n,val:i},{rowData:s,prop:l,val:a},!1)){let e=t[n];e=e?e._pre_h||e:t[n]={colspan:1,rowspan:1},p._pre_h=e,p.colspan=p.rowspan=0,e.colspan++}}return o}))}))}}getCellMergeInfo(e,t){const o=this._getCellKey(e,t);return this.cellMap[o]||{colspan:1,rowspan:1}}_getCellKey(e,t){return"object"==typeof e&&(e=this._getRowKey(e)),e+"$$"+t}_getRowKey(e){return this.options.getRowKey(e)}_judgeValueEquals(e,t,o){return this.options.judgeValueEquals(e,t,this,o)}_disabled(){const e=this.options.disabled;return"function"==typeof e?e():e}_getHorizontalColumns(){const e=this.options.horizontalColumns||[],t=[],o=[];return e.forEach((e=>{Array.isArray(e)?t.push(e):o.push(e)})),o.length&&t.push(o),t}get defaultTableMergeOptions(){return defaultTableMergeOptions}get mergeColumnsRelations(){return this.options.mergeColumnsRelations||{}}get mergeColumns(){return this.options.mergeColumns||[]}get cellMap(){return this._cellMap||{}}set cellMap(e){this._cellMap=e}get options(){return this._options||{}}}